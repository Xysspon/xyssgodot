name: ðŸªŸ Windows Builds
on: [push, pull_request, workflow_dispatch]

# Global Settings
# SCONS_CACHE for windows must be set in the build environment
env:
  # Only used for the cache key. Increment version to force clean build.
  GODOT_BASE_BRANCH: master-v2
  SCONSFLAGS: verbose=yes warnings=all werror=yes module_text_server_fb_enabled=yes
  SCONS_CACHE_MSVC_CONFIG: true

concurrency:
  group: ci-${{github.actor}}-${{github.head_ref || github.run_number}}-${{github.ref}}-windows
  cancel-in-progress: true

jobs:
  build-windows:
    # Windows 10 with latest image
    runs-on: "windows-latest"
    name: ${{ matrix.name }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: Editor w/ Mono (target=release_debug, tools=yes, tests=yes)
            cache-name: windows-editor-mono
            target: release_debug
            tools: true
            tests: false
            # Skip debug symbols, they're way too big with MSVC.
            sconsflags: module_mono_enabled=yes mono_static=yes mono_glue=no
            bin: "./bin/godot.windows.opt.tools.64.mono.exe"
            build-mono: true

          - name: Template w/ Mono (target=release, tools=no)
            cache-name: windows-template-mono
            target: release
            tools: false
            tests: false
            sconsflags: module_mono_enabled=yes mono_static=yes mono_glue=no debug_symbols=no
            build-mono: true

    steps:
      - uses: actions/checkout@v2

      - name: Setup Godot build cache
        uses: ./.github/actions/godot-cache
        with:
          cache-name: ${{ matrix.cache-name }}
        continue-on-error: true

      - name: Setup python and scons
        uses: ./.github/actions/godot-deps

      - name: Configure dependencies
        run: |
          choco install -y mono

      - name: Compilation
        uses: ./.github/actions/godot-build
        with:
          sconsflags: ${{ env.SCONSFLAGS }} ${{ matrix.sconsflags }}
          platform: windows
          target: ${{ matrix.target }}
          tools: ${{ matrix.tools }}
          tests: ${{ matrix.tests }}

      - name: Generate Mono glue
        if: ${{ matrix.build-mono }}
        run: |
          ${{ matrix.bin }} --headless --generate-mono-glue modules/mono/glue

      # Rebuild with mono
      - name: Compilation (mono_glue=yes)
        uses: ./.github/actions/godot-build
        if: ${{ matrix.build-mono }}
        with:
          sconsflags: ${{ env.SCONSFLAGS }} ${{ matrix.sconsflags }} mono_glue=yes
          platform: windows
          target: ${{ matrix.target }}
          tools: ${{ matrix.tools }}

      # Execute unit tests for the editor
      - name: Unit tests
        if: ${{ matrix.tests }}
        run: |
          ${{ matrix.bin }} --test

      - name: Prepare artifact
        run: |
          Remove-Item bin/* -Include *.exp,*.lib,*.pdb -Force

      - name: Upload artifact
        uses: ./.github/actions/upload-artifact
        with:
          name: ${{ matrix.cache-name }}
